@external gwt-SplitLayoutPanel-HDragger gwt-SplitLayoutPanel-VDragger;

body, * {
    font-family: Source Sans Pro, Verdana, sans-serif;
}

body, html {
    height: 100%;
}

input:focus, textarea:focus, button:focus {
    outline: none;
}

.clear {
    clear: both;
}

.list {
    overflow: auto;
}

.toolbar {
    color: white;
    height: 100%;
}

/* -> UI Toolbar Button */

.toolbarButton {
    cursor: pointer;

    width: 100%;
    height: 46px;
    float: left;
    position: relative;
    background: #2d2d2d;

    @mixin transition_effect(all, .25s, ease);
}

.toolbarButton:hover {
    background: white;
    color: black;

    border-left: 2px solid C_PRIMARY;
    margin-left: 0;

    @mixin transition_effect(margin-left, 0, ease);
}

.toolbarButton:hover > div:first-child {
    margin-left: -2px;
}

.toolbarButton:active {
    background: rgba(46, 46, 46, 0.5);

    border: 1px solid rgba(37, 37, 37, 0.7);

    -webkit-box-shadow: inset 0 0 5px -1px rgba(0, 0, 0, 0.35), 0 1px 5px 1px rgba(192, 192, 192, 0.06);
    -moz-box-shadow: inset 0 0 5px -1px rgba(0, 0, 0, 0.35), 0 1px 5px 1px rgba(192, 192, 192, 0.06);
    box-shadow: inset 0 0 5px -1px rgba(0, 0, 0, 0.35), 0 1px 5px 1px rgba(192, 192, 192, 0.06);
}

.toolbarButtonDisabled {
    cursor: default;
    opacity: .4;
}

.toolbarButtonDisabled:hover {
    background: none;
    color: white;
    border-color: transparent;

    @mixin boxshadow_none();
}

.toolbarButton .innerContainer {
    display: inline-block;
    margin-top: -21px;
    margin-left: 5px;

    position: absolute;
    top: 50%;
}

.toolbarButton .image img {
    position: absolute;
    top: 10px;
    left: 14px;
}

.version {
    position: fixed;
    right: 5px;
    bottom: 5px;
    z-index: 1000;
}

.tabs {
    font-size: 1.2em;
    line-height: 28px;
    text-transform: uppercase;

    padding-top: 5px;
    margin-bottom: 10px;
}

.tabs > span {
    padding: 0 20px;
}

.kindHeaderElement {
    line-height: 30px;
    font-size: 15px;
    font-weight: bold;

    display: block;
    padding: 3px 16px;
    text-overflow: ellipsis;
    white-space: nowrap;

    position: relative;
}

.kindListElement {
    width: 100%;

    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    @mixin transition_effect(background-color, .25s, ease);
}

.kindListElement span {
    line-height: 26px;
    font-size: 17px;

    padding: 3px 16px;
}

.kindListElement:hover, .kindListElementSelected {
    background-color: C_PRIMARY;
    color: #f6f6f6;

    cursor: pointer;
}

.kindListElementSelected, .kindListElementSelectedHidden {
    transition_effect: background-color .25s ease .3s;
}

.entityTypeSelector {
    background: C_SECONDARY_LIGHT;
    color: #2d2d2d;

    float: left;
    width: 250px;
    height: 100%;

    @mixin transition_effect(margin-left, .5s, ease);
}

.entityTypeSelector > div {
    height: 100%;
}

.entityTypeSelectorEmpty {
    background-color: transparent;
    line-height: 28px;
    text-shadow: 1px 1px 1px rgba(255, 255, 255, 0.85);

    display: inline-block;
    padding: 3px 8px 3px 8px;
    border-top: 1px solid rgba(255, 255, 255, 0.5);
    border-bottom: 1px solid rgba(0, 0, 0, 0.07);
}

.entityListPanel {
    width: 100%;
    height: 100%;
    float: left;
    padding-left: 5px;

    zoom: 1;
    overflow-y: auto;

    @mixin transition_effect(left, .5s, ease);
}

.entityDetailPanel {
    background: C_SECONDARY_LIGHT;

    height: 100%;
    width: 100%;
    border-left: 3px solid #25AEE1;

    position: absolute;
    top: 0;

    @mixin transition_effect(left, .5s, ease);
}

.hiddenOverlay {
    position: relative;
}

.hiddenOverlay > div:before {
    content: "\2190  Choose one of the entity kind to the left";
    line-height: 36px;

    padding-left: 8px;
    opacity: 1;

    @mixin transition_effect(all, .5s, ease);
}

.hiddenOverlay.revealOverlay > div:before {
    opacity: 0;
}

.hiddenOverlay.revealUnderOverlay > div:before {
    display: none;
}

.pager table {
    margin-right: 5px;

    float: left;
}

.firstTable, .secondTable, .pager {
    overflow: visible;
}

.firstTable .lockedRow td {
    background-color: C_PRIMARY;
    color: #fff;
}

.firstTable, .secondTable {
    width: 100%;
}

.firstTable {
    margin-right: -1px;
    padding: 0 15px;
    clear: both;
}

.firstTable thead tr:after {
    content: "";
}

.firstTable tbody tr:hover {
    cursor: pointer;
}

.entityDetailPanelVisibility {
    overflow: visible;
}

.trashSmall {
    gwt-sprite: "trash_small_up";
}

.trashSmallNoHover {
    gwt-sprite: "trash_small_up";
}

.trashSmall:hover {
    gwt-sprite: "trash_small_rl";
}

.expand {
    gwt-sprite: "expand_up";
    cursor: pointer;
}

.expand:hover {
    gwt-sprite: "expand_rl";
}

.collapse {
    gwt-sprite: "collapse_up";
    cursor: pointer;
}

.collapse:hover {
    gwt-sprite: "collapse_rl";
}

.importSmall {
    gwt-sprite: "import_small_up";
    margin: 0;
}

.pencilSmall {
    gwt-sprite: "pencil_small";
    margin: 0;
}

.popup {
    background-color: C_SECONDARY_LIGHT;
    color: #2d2d2d;

    padding: 20px 20px 20px 20px;

    z-index: 110;
    position: relative;

    @mixin boxshadow(0px, 1px, 16px, -2px, rgba(0, 0, 0, 0.35));
}

.popupIcon {
    display: inline-block;
    margin-right: 5px;
}

.popupHeader {
    color: #2d2d2d;
    font-weight: bold;
    font-size: 1.4em;
    text-transform: uppercase;

    margin-bottom: 20px;

    position: relative;
}

.close {
    color: #000000;
    font-size: 20px;
    font-weight: bold;
    line-height: 20px;
    text-shadow: 0 1px 0 #ffffff;

    position: absolute;
    right: 6px;
    top: 2px;
    float: right;

    opacity: 0.2;
    filter: alpha(opacity=20);
}

.close:hover {
    color: #000000;
    text-decoration: none;
    cursor: pointer;

    opacity: 0.4;
    filter: alpha(opacity=40);
}

.glassPanel {
    position: relative;
    z-index: 100;
    background: rgba(0, 0, 0, 0.4);
}

.button:hover:enabled, .button:active:enabled {
    @mixin boxshadow_inset(2px, 2px, 6px, 1px, rgba(0, 0, 0, 0.4));
}

.button {
    width: 100%;
    font-size: 18px;
    text-transform: uppercase;

    border: none;
    background-color: C_PRIMARY;
    color: white;
}

.button:hover:enabled {
    cursor: pointer;
}

.button:active:enabled {
    background-color: #0e76bc;
}

.button.gray {
    border: none;

    background: #b7b7b7;
    color: #2d2d2d;
    text-shadow: none;
}

.button.gray:hover:enabled {
    background: #b7b7b7;
    color: #2d2d2d;
    border: none;
    text-shadow: none;
}

.button.gray:active:enabled {
    border: none;
    background: #8d8d8d;
    text-shadow: none;
}

.loginAjaxLoader {
    position: absolute;
    right: -36px;
    top: 99px;
}

.northSection {
    background-color: #2d2d2d;
    width: 100%;

    height: 110px;

    position: absolute;
    top: 0;
}

.main {
    width: 100%;

    position: absolute;
    top: 110px;
    bottom: 0;
}

.panelToggle {
    transition: webkitTransform 0.5s;
}

.panelToggle:hover {
    cursor: pointer;
}

.delete {
    gwt-sprite: "delete";
}

.record {
    gwt-sprite: "record";
}

.pencil {
    gwt-sprite: "pencil_up";
}

.toolbarButton:hover .pencil {
    gwt-sprite: "pencil_rl";
}

.refresh {
    gwt-sprite: "refresh_up";
    cursor: pointer;
    display: inline-block;
}

.refresh:hover {
    gwt-sprite: "refresh_rl";
}

.deselect {
    gwt-sprite: "deselect_up";
    cursor: pointer;
    display: inline-block;
}

.deselectDisabled {
    gwt-sprite: "deselect_dis";
    cursor: default;
    display: inline-block;
}

.deselect:hover {
    gwt-sprite: "deselect_rl";
}

.toolbarButton:hover .delete {
    gwt-sprite: "deleteRl";
}

.toolbarButton:hover .stop {
    gwt-sprite: "stopRl";
}

.stop, .toolbarButtonDisabled:hover .stop {
    gwt-sprite: "stop";
}

.delete,
.toolbarButton:hover .delete,
.stop,
.toolbarButton:hover .stop,
.toolbarButtonDisabled:hover .stop,
.record,
.toolbarButton .pencil,
.toolbarButton:hover .pencil {
    background-position-x: 50%;
    background-position-y: 50%;

    height: 46px;
    width: 46px;
    display: inline-block;
}

.profilerToggle {
    float: right;

    margin-top: 6px;
    padding: 4px 8px;
}

.profilerToggle.flipped {
}

.flipped {
    @mixin flip_horizontal();
}

.toggleKindsPanel {
    position: absolute;
    right: 3px;
    top: 13px;
    padding: 4px;
}

.toggleKindsPanel.flipped {
    right: 1px;
}

.gwt-SplitLayoutPanel-HDragger, .gwt-SplitLayoutPanel-VDragger {
    gwt-sprite: "resize";
    background-color: transparent;
    background-position-x: 50%;
    background-position-y: 50%;

    width: 100%;
    height: 100%;
    z-index: 10;
}

.gwt-SplitLayoutPanel-VDragger {
    padding-bottom: 7px;
    background-position-y: 7px;
}

.statementDetails {
    background-color: C_SECONDARY_LIGHT;

    display: none;
    overflow: hidden;
    padding: 15px;
    margin-left: 12px;
    margin-top: 6px;

    @mixin transition_effect(height, .5s, ease);
}

.statementDetails p {
    color: C_SECONDARY;
    margin: 0;
    text-transform: uppercase;
}

.statementImage {
    gwt-sprite: "listDot";
    margin-right: 5px;
    display: inline-block;
}

.statementImageRl, .statementImageDn {
    gwt-sprite: "listDotRl";
    cursor: pointer;
}

.filterText {
    color: #9b9b9b;

    margin-left: 17px;
}

.filterText:hover {
    color: white;
}

.className {
    font-size: 1.3em;
}

.methodName {
    font-size: 1.1em;
    line-height: 1.5em;

    padding-left: 5px;
}

.methodName:hover {
    cursor: pointer;
    background-color: C_PRIMARY;
    color: white;
}

.entityPanelTransitions {
    @mixin transition_effect(width, .5s, ease);
}

.power {
    gwt-sprite: "power";

    float: right;
    background-position-y: 40%;
    height: 100%;
    margin: 0 10px;
}

.power:hover {
    cursor: pointer;
}

.errorField {
    outline: #ff5400 solid 2px;
    outline-offset: -2px;
}

.uploadLabel {
    font-size: 1.1em;
    background: #d9d9d9;
    text-align: left;

    height: 24px;
    padding: 5px !important;
    margin-bottom: 10px;
}

.checked {
    background-color: C_PRIMARY;
}

.booleanKey {
    float: left;
    margin: 5px 0 5px 0;
    line-height: 19px;
}

.buttonContainer {
    padding-top: 5px;
    margin: 0;
    text-align: center;
    width: 100%;
}

.buttonContainer button, .chooseFileButton {
    margin: 0;
    text-align: center;
    width: calc(50% - 5px);
    padding: 5px;
}

.buttonContainer > :first-child {
    margin-right: 6px;
}

.embeddedEntityProperties .editorLabelSeparator {
    display: none;
}

.editorLabelSeparator {
    background-color: C_PRIMARY;

    width: 12px;
    height: 2px;
    margin-top: 3px;
    margin-bottom: 1px;
}

.embeddedEntityProperties > .editorLabel {
    display: block;
    color: #848484;
}

.embeddedEntityProperties.collectionEditor > .editorMain > .editorLabel {
    font-size: 16px;
    color: #000;
}

.editorLabel {
    font-size: 12px;
    font-weight: bold;
    color: C_PRIMARY;
    text-transform: uppercase;
}

.embeddedEntityProperties .editorMain {
    margin-bottom: 5px;
}

.editorMain {
    margin-bottom: 15px;
}

.editorMain input[type=text] {
    font-size: 16px;
    color: black;
    background-color: lightgray;

    width: editInputWidth;
    padding: 2px 4px;
    border: none;
}

/* -> License -- */

.license {
    margin-top: 100px;
}

.licenseButtonContainer {
    position: relative;
}
